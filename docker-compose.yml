version: '3.3'

services:
  alphabet:
    build: ./alphabet/
    container_name: alphabet
    depends_on:
      - dbalphabet
      - rabbitmq
      - cache
    expose:
      - 8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbalphabet:5432/alphabet
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_REDIS_HOST=cache
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=password
  dbalphabet:
    image: 'postgres:13.1-alpine'
    container_name: dbalphabet
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=alphabet
    expose:
      - 5432
  auth:
    build: ./auth/
    container_name: auth
    depends_on:
      - dbauth
      - rabbitmq
    expose:
      - 8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbauth:5432/auth
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq
  dbauth:
    image: 'postgres:13.1-alpine'
    container_name: dbauth
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=auth
    expose:
      - 5432
  gateway:
    build: ./gateway/
    container_name: gateway
    ports:
      - "8000:8000"
    depends_on: 
      - alphabet
      - auth
      - stats
    environment:
      SPRING_PROFILES_ACTIVE: path
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://alphabet:8081
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: 'alphabet'
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: 'Path=/exercise/**,/course/**,/language/**'
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://auth:8080
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: 'auth'
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: 'Path=/authenticate,/register'
      SPRING_CLOUD_GATEWAY_ROUTES[2]_URI: http://stats:8082
      SPRING_CLOUD_GATEWAY_ROUTES[2]_ID: 'stats'
      SPRING_CLOUD_GATEWAY_ROUTES[2]_PREDICATES[0]: 'Path=stats/**'
      SPRING_CLOUD_GATEWAY_GLOBALCORS_CORS-CONFIGURATIONS['[/**]']_ALLOWEDORIGINS: http://localhost
  alingofrontend:
    container_name: alingofrontend
    build: ./frontend/
    ports:
      - "80:80"
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
  cache:
    container_name: 'cache'
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass password
    volumes: 
      - cache:/data
  stats:
    build: ./stats/
    container_name: stats
    depends_on:
      - dbstats
      - rabbitmq
    expose:
      - 8082
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbstats:5432/stats
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq
  dbstats:
    image: 'postgres:13.1-alpine'
    container_name: dbstats
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=stats
    command: ['postgres', '-c', 'wal_level=logical']
    expose:
      - 5432
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.3.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
  debezium:
    image: debezium/connect:latest
    restart: always
    container_name: debezium
    hostname: debezium
    depends_on:
      - dbstats
      - kafka
    ports:
      - '8083:8083'
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      STATUS_STORAGE_TOPIC: connect_statuses
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      ENABLE_DEBEZIUM_SCRIPTING: 'true'
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
volumes:
  cache:
    driver: local
